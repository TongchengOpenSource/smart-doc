name: Build and Run Example Project

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Plugin Repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build and Install Plugin
        run: mvn install

      - name: Upload Plugin Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: smart-doc-maven-jar
          path: ~/.m2/repository/com/ly/smart-doc
          if-no-files-found: error

  build-smart-doc-example-demo:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Example Project
      uses: actions/checkout@v4
      with:
        repository: smart-doc-group/smart-doc-example-cn
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build and Install Example Project
      run: mvn -DskipTests=true install

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: smart-doc-maven-jar
        path: ./artifacts

    - name: Move Files to Local Maven Repository
      run: |
        mkdir -p ~/.m2/repository/com/ly/smart-doc
        echo "Overwriting target directory with new artifacts:"
        rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
        echo "Listing files in target directory:"
        ls -lh ~/.m2/repository/com/ly/smart-doc

    - name: Build and Install Example Project Again
      run: mvn -DskipTests=true install

    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Cache Project Files
      uses: actions/cache@v4
      with:
        path: ./
        key: ${{ runner.os }}-project-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-project-

  generate-docs:
    needs: build-smart-doc-example-demo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docType: [
          'adoc',
          'html',
          'javadoc-adoc',
          'javadoc-html',
          'javadoc-markdown',
          'jmeter',
          'markdown',
          'openapi',
          'postman',
          'rpc-adoc',
          'rpc-html',
          'rpc-markdown',
          'swagger',
          'websocket-markdown',
          'word'
        ]
    steps:
      - name: Restore Project Cache
        uses: actions/cache@v4
        with:
          path: ./
          key: ${{ runner.os }}-project-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-project-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Restore Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Validate Maven Dependencies
        run: |
          echo "Validating smart-doc installation:"
          ls -lh ~/.m2/repository/com/ly/smart-doc
          mvn -DskipTests=true dependency:resolve

      - name: Generate ${{ matrix.docType }} Documentation
        run: mvn -DskipTests=true smart-doc:${{ matrix.docType }}
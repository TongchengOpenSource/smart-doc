name: Build and Run Example Project

on:
  pull_request:
    branches:
      - master
    paths:
      - 'src/**'          # Trigger workflow only if files in src directory change
      - 'pom.xml'         # Trigger workflow only if pom.xml file changes

env:
  smart-doc-version: ${{ github.run_id }}

jobs:
  build:
    if: ${{ github.event.pull_request.changed_files > 0 }} # Run only if there are file changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Update Version in pom.xml
        run: mvn versions:set -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install Plugin
        run: mvn install

      - name: Upload Plugin Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: smart-doc-maven-jar
          path: ~/.m2/repository/com/ly/smart-doc
          if-no-files-found: error

  maven-plugin-build:
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: maven-plugin-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout Maven Plugin Repository
        uses: actions/checkout@v4
        with:
          repository: linwumingshi/smart-doc-maven-plugin
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: smart-doc-maven-jar
          path: ./artifacts

      - name: Move Files to Local Maven Repository
        run: |
          mkdir -p ~/.m2/repository/com/ly/smart-doc
          echo "Overwriting target directory with new artifacts:"
          rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
          echo "Listing files in target directory:"
          ls -lh ~/.m2/repository/com/ly/smart-doc

      - name: Update Version in pom.xml
        run: |
          mvn versions:set -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=smart-doc.version -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install
        run: mvn -DskipTests=true install

      - name: Upload Plugin Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: smart-doc-maven-plugin-jar
          path: ~/.m2/repository/com/ly/smart-doc
          if-no-files-found: error

  gen-rest-api-doc:
    needs: maven-plugin-build
    runs-on: ubuntu-latest
    concurrency:
      group: generate-rest-api-doc-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
    - name: Checkout Example Project
      uses: actions/checkout@v4
      with:
        repository: smart-doc-group/smart-doc-example-cn
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: smart-doc-maven-plugin-jar
        path: ./artifacts

    - name: Move Files to Local Maven Repository
      run: |
        mkdir -p ~/.m2/repository/com/ly/smart-doc
        echo "Overwriting target directory with new artifacts:"
        rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
        echo "Listing files in target directory:"
        ls -lh ~/.m2/repository/com/ly/smart-doc

    - name: Update Smart-Doc Version in pom.xml
      run: |
        mvn versions:set-property -Dproperty=smart-doc.version -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

    - name: Build and Install Example Project
      run: mvn -DskipTests=true install

    - name: Generate AsciiDoc Documentation
      run: mvn -DskipTests=true smart-doc:adoc

    - name: Generate HTML Documentation
      run: mvn -DskipTests=true smart-doc:html

    - name: Generate JMeter Documentation
      run: mvn -DskipTests=true smart-doc:jmeter

    - name: Generate Markdown Documentation
      run: mvn -DskipTests=true smart-doc:markdown

    - name: Generate OpenAPI Documentation
      run: mvn -DskipTests=true smart-doc:openapi

    - name: Generate Postman Documentation
      run: mvn -DskipTests=true smart-doc:postman

    - name: Generate Word Documentation
      run: mvn -DskipTests=true smart-doc:word

    - name: Upload REST API Documentation
      uses: actions/upload-artifact@v4
      with:
        name: rest-api-doc
        path: ${{ github.workspace }}/target/doc/
        if-no-files-found: error

  gen-dubbo-api-doc:
    needs: maven-plugin-build
    runs-on: ubuntu-latest
    concurrency:
      group: generate-dubbo-api-doc-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout Example Project
        uses: actions/checkout@v4
        with:
          repository: smart-doc-group/smart-doc-example-cn
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: smart-doc-maven-plugin-jar
          path: ./artifacts

      - name: Move Files to Local Maven Repository
        run: |
          mkdir -p ~/.m2/repository/com/ly/smart-doc
          echo "Overwriting target directory with new artifacts:"
          rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
          echo "Listing files in target directory:"
          ls -lh ~/.m2/repository/com/ly/smart-doc

      - name: Update Smart-Doc Version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=smart-doc.version -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install Example Project
        run: mvn -DskipTests=true install

      - name: Generate RPC AsciiDoc Documentation
        run: mvn -DskipTests=true smart-doc:rpc-adoc

      - name: Generate RPC HTML Documentation
        run: mvn -DskipTests=true smart-doc:rpc-html

      - name: Generate RPC Markdown Documentation
        run: mvn -DskipTests=true smart-doc:rpc-markdown

      - name: Upload RPC API Documentation
        uses: actions/upload-artifact@v4
        with:
          name: dubbo-api-doc
          path: ${{ github.workspace }}/target/doc/
          if-no-files-found: error

  gen-javadoc-api-doc:
    needs: maven-plugin-build
    runs-on: ubuntu-latest
    concurrency:
      group: generate-javadoc-api-doc-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout Example Project
        uses: actions/checkout@v4
        with:
          repository: smart-doc-group/smart-doc-example-cn
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: smart-doc-maven-plugin-jar
          path: ./artifacts

      - name: Move Files to Local Maven Repository
        run: |
          mkdir -p ~/.m2/repository/com/ly/smart-doc
          echo "Overwriting target directory with new artifacts:"
          rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
          echo "Listing files in target directory:"
          ls -lh ~/.m2/repository/com/ly/smart-doc

      - name: Update Smart-Doc Version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=smart-doc.version -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install Example Project
        run: mvn -DskipTests=true install

      - name: Generate Javadoc AsciiDoc Documentation
        run: mvn -DskipTests=true smart-doc:javadoc-adoc

      - name: Generate Javadoc HTML Documentation
        run: mvn -DskipTests=true smart-doc:javadoc-html

      - name: Generate Javadoc Markdown Documentation
        run: mvn -DskipTests=true smart-doc:javadoc-markdown

      - name: Upload Javadoc API Documentation
        uses: actions/upload-artifact@v4
        with:
          name: javadoc-api-doc
          path: ${{ github.workspace }}/target/doc/
          if-no-files-found: error

  gen-websocket-api-doc:
    needs: maven-plugin-build
    runs-on: ubuntu-latest
    concurrency:
      group: generate-websocket-api-doc-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout Example Project
        uses: actions/checkout@v4
        with:
          repository: smart-doc-group/smart-doc-example-cn
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: smart-doc-maven-plugin-jar
          path: ./artifacts

      - name: Move Files to Local Maven Repository
        run: |
          mkdir -p ~/.m2/repository/com/ly/smart-doc
          echo "Overwriting target directory with new artifacts:"
          rsync -av --delete ./artifacts/ ~/.m2/repository/com/ly/smart-doc/
          echo "Listing files in target directory:"
          ls -lh ~/.m2/repository/com/ly/smart-doc

      - name: Update Smart-Doc Version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=smart-doc.version -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install Example Project
        run: mvn -DskipTests=true install

      - name: Generate WebSocket AsciiDoc Documentation
        run: mvn -DskipTests=true smart-doc:websocket-adoc

      - name: Generate WebSocket HTML Documentation
        run: mvn -DskipTests=true smart-doc:websocket-html

      - name: Generate WebSocket Markdown Documentation
        run: mvn -DskipTests=true smart-doc:websocket-markdown


      - name: Upload WebSocket API Documentation
        uses: actions/upload-artifact@v4
        with:
          name: websocket-api-doc
          path: ${{ github.workspace }}/target/doc/
          if-no-files-found: error

  gen-grpc-api-doc:
    needs: maven-plugin-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    concurrency:
      group: generate-rest-api-doc-${{ github.event.pull_request.number }}-${{ matrix.os }}
      cancel-in-progress: true

    steps:
      - name: Checkout Example Project
        uses: actions/checkout@v4
        with:
          repository: smart-doc-group/smart-doc-example-cn
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: smart-doc-maven-plugin-jar
          path: ./artifacts

      - name: Move Files to Local Maven Repository
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" || "${{ matrix.os }}" == "macos-latest" ]]; then
            TARGET_DIR=~/.m2/repository/com/ly/smart-doc/
            mkdir -p "$TARGET_DIR" || echo "Directory already exists"
            rsync -av --delete ./artifacts/ "$TARGET_DIR"
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            TARGET_DIR="$USERPROFILE\\.m2\\repository\\com\\ly\\smart-doc\\"
            mkdir -p "$TARGET_DIR" || echo "Directory already exists"
            cp -r ./artifacts/* "$TARGET_DIR"
          fi
        shell: bash


      - name: Update Smart-Doc Version in pom.xml
        run: |
          mvn versions:set-property -Dproperty="smart-doc.version" -DnewVersion="${{ env.smart-doc-version }}" -DgenerateBackupPoms=false

      - name: Build and Install Example Project
        run: mvn -DskipTests=true install

      - name: Generate gRPC AsciiDoc Documentation
        run: mvn -DskipTests=true smart-doc:grpc-adoc

      - name: Generate gRPC HTML Documentation
        run: mvn -DskipTests=true smart-doc:grpc-html

      - name: Generate gRPC Markdown Documentation
        run: mvn -DskipTests=true smart-doc:grpc-markdown

      - name: Upload gRPC API Documentation
        uses: actions/upload-artifact@v4
        with:
          name: gRPC-api-doc-${{ runner.os }}
          path: ${{ github.workspace }}/target/doc/
          if-no-files-found: error
<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="${projectName}" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
	  <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="<% if(language.code == 'zh-CN') { %>用户定义的变量<% } else { %>Arguments<% } %>" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
        <%
        for(api in apiDocList){
        %>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="${api.desc}" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="<% if(language.code == 'zh-CN') { %>循环控制器<% } else { %>LoopController<% } %>" enabled="true">
		  <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <%
        for(doc in api.list){
        %>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${doc.desc}" enabled="true">
          <%if(isNotEmpty(doc.requestExample.jsonBody)){%>
		  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">
${doc.requestExample.jsonBody}
                </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
		  <%} else if(isNotEmpty(doc.queryParams)) {%>
			  
		  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
		  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
			<collectionProp name="Arguments.arguments">
			  <%
			  for(param in doc.queryParams){
		      %>
				<elementProp name="" elementType="HTTPArgument">
					<boolProp name="HTTPArgument.always_encode">false</boolProp>
					<stringProp name="Argument.name">${param.field}</stringProp>
					<stringProp name="Argument.metadata">=</stringProp>
				</elementProp>
			 <%}%>
			</collectionProp>
		</elementProp>
			
		  <% } else if(isNotEmpty(doc.pathParams)) {%>
			  
		  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
		  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
			<collectionProp name="Arguments.arguments">
			  <%
			  for(param in doc.pathParams){
			  %>
				<elementProp name="" elementType="HTTPArgument">
					<boolProp name="HTTPArgument.always_encode">false</boolProp>
					<stringProp name="Argument.name">${param.field}</stringProp>
					<stringProp name="Argument.metadata">=</stringProp>
				</elementProp>
			  <%}%>
			</collectionProp>
		  </elementProp>

		  <%}%>
          <stringProp name="HTTPSampler.domain">${doc.serverUrl}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${doc.url}</stringProp>
          <stringProp name="HTTPSampler.method">${doc.type}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="<% if(language.code == 'zh-CN') { %>HTTP信息头管理器<% } else { %>HeaderManager<% } %>" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">${doc.contentType}</stringProp>
              </elementProp>
              <%if(isNotEmpty(doc.requestHeaders)){%>
                <%
                for(param in doc.requestHeaders){
                %>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${param.name}</stringProp>
                <stringProp name="Header.value">${param.value}</stringProp>
              </elementProp>
                <%}%>
            <%}%>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="<% if(language.code == 'zh-CN') { %>察看结果树<% } else { %>ResultCollector<% } %>" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
            <% } %>
      </hashTree>
      <%}%>
    </hashTree>
  </hashTree>
</jmeterTestPlan>